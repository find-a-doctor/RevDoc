package com.revdoc;

import java.security.MessageDigest;
import java.sql.Time;
import java.util.Date;

import javax.annotation.PostConstruct;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.revdoc.dao.AppointmentDAO;
import com.revdoc.dao.RevAssociateDAO;
import com.revdoc.model.Appointment;
import com.revdoc.model.RevAssociate;

import lombok.RequiredArgsConstructor;

@Component
@Transactional
public class DataLoader {

	@Autowired
	private RevAssociateDAO revAssociateDao;
	@Autowired 
	private AppointmentDAO appointmentDao;



	@PostConstruct
	public void init() {
		Time time = new Time(3);
		time.setHours(4); // use this to set the hour
		System.out.println("Example of Time Object: "+time); // - result is 04:00:00
		
		//CREATE REVATURE USER
		RevAssociate u1 = new RevAssociate("revTom@gmail.com", encryptPassword("revTom"), "Tom Cat");
		u1=revAssociateDao.save(u1);
		RevAssociate u2 = new RevAssociate("revCat@gmail.com", encryptPassword("revCat"), "Cat Tom");
		u2=revAssociateDao.save(u2);
		
		// PRINTING OUT THE RESULTS
		System.out.println("u1: "+u1);
		System.out.println("u2: "+u2);
		
		//CREATE APPOINTMENT
//		Appointment a1= new Appointment(0,"dddd");
//		a1=appointmentDao.save(a1);
//		System.out.println("Appointment: "+a1);
		// init code goes here

	}

	public String encryptPassword(String password) {
		StringBuffer message = new StringBuffer();

		try {
			MessageDigest md = MessageDigest.getInstance("SHA-1");
			byte[] hash = md.digest(password.getBytes("UTF-8"));

			for (byte w : hash) {
				message.append(String.format("%02x", w));
			}

		} catch (Exception e) {
			System.out.println(e);
		}

		return message.toString();

	}
}

package com.revdoc.dao;

import java.util.List;

import org.jboss.logging.Param;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import com.revdoc.model.Doctor;

@Repository
public interface DoctorDAO  extends JpaRepository<Doctor, Long>{
	@Query("select d from Doctor d where d.npi = :npi")
	Doctor findByNpi(long npi);
	
	@Query("delete Doctor d  where d.npi = :npi")
	Doctor deleteByNpi(long npi);
	
	@Query("select doctor_name, experience, email, password, phone, about_me, "
			+ "location_name, address, city, state, zip, location_type_name, "
			+ "license_name, license_date, specialty_name, condition_name, insurance_name "
			+ "from Doctor where Doctor.npi = :npi "
			+ "join Location on Doctor.location_id = Location.location_id "
			+ "join Doctor_license on Doctor.npi = Doctor_license.npi "
			+ "join License on Doctor_license.license_id = License.license_id "
			+ "join Specialty on Doctor.npi = Specialty.npi "
			+ "join Specialty_type on Specialty.specialty_type_id = Specialty_type.specialty_type_id "
			+ "join Conditions on Doctor.npi = Conditions.npi "
			+ "join ConditionType on Conditions.condition_type_id = Condition_type.condition_type_id "
			+ "join Insurance on Doctor.npi = Insurance.npi "
			+ "join Insurance_type on Insurance.insurance_type_id = Insurance_type.insurance_type_id")
	Doctor findDoctorProfileByNpi(long npi);
	
}
